digraph "" {
IERC20[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>IERC20</B></TD></TR><TR><TD align="left"><I>Public Functions:</I></TD></TR><TR><TD align="left">    totalSupply()</TD></TR><TR><TD align="left">    balanceOf(address)</TD></TR><TR><TD align="left">    transfer(address,uint256)</TD></TR><TR><TD align="left">    allowance(address,address)</TD></TR><TR><TD align="left">    approve(address,uint256)</TD></TR><TR><TD align="left">    transferFrom(address,address,uint256)</TD></TR></TABLE> >];

Context[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>Context</B></TD></TR><TR><TD align="left"><I>Private Functions:</I></TD></TR><TR><TD align="left">    _msgSender()</TD></TR><TR><TD align="left">    _msgData()</TD></TR></TABLE> >];

Ownable -> Context;
Ownable[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>Ownable</B></TD></TR><TR><TD align="left"><I>Public Functions:</I></TD></TR><TR><TD align="left">    owner()</TD></TR><TR><TD align="left">    renounceOwnership()</TD></TR><TR><TD align="left">    transferOwnership(address)</TD></TR><TR><TD align="left"><I>Private Functions:</I></TD></TR><TR><TD align="left">    _checkOwner()</TD></TR><TR><TD align="left">    _transferOwnership(address)</TD></TR><TR><TD align="left"><I>Modifiers:</I></TD></TR><TR><TD align="left">    onlyOwner()</TD></TR><TR><TD align="left"><I>Private Variables:</I></TD></TR><TR><TD align="left">    _owner</TD></TR></TABLE> >];

ReentrancyGuard[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>ReentrancyGuard</B></TD></TR><TR><TD align="left"><I>Private Functions:</I></TD></TR><TR><TD align="left">    _nonReentrantBefore()</TD></TR><TR><TD align="left">    _nonReentrantAfter()</TD></TR><TR><TD align="left"><I>Modifiers:</I></TD></TR><TR><TD align="left">    nonReentrant()</TD></TR><TR><TD align="left"><I>Private Variables:</I></TD></TR><TR><TD align="left">    _NOT_ENTERED</TD></TR><TR><TD align="left">    _ENTERED</TD></TR><TR><TD align="left">    _status</TD></TR></TABLE> >];

TRexBUSD -> Context [ label="1" ];
TRexBUSD -> Ownable [ label="2" ];
TRexBUSD -> ReentrancyGuard [ label="3" ];
TRexBUSD[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>TRexBUSD</B></TD></TR><TR><TD align="left"><I>Public Functions:</I></TD></TR><TR><TD align="left">    stake(address,uint256)</TD></TR><TR><TD align="left">    withdraw_referral()</TD></TR><TR><TD align="left">    daily_claim()</TD></TR><TR><TD align="left">    weekly_withdraw()</TD></TR><TR><TD align="left">    rexbusd_data()</TD></TR><TR><TD align="left">    contract_balance()</TD></TR><TR><TD align="left">    get_msg_dailyClaim(address)</TD></TR><TR><TD align="left">    get_msg_weeklyWithdraw(address)</TD></TR><TR><TD align="left">    get_msg_deposit(address)</TD></TR><TR><TD align="left">    get_msg_referral(address)</TD></TR><TR><TD align="left">    get_msg_status(address)</TD></TR><TR><TD align="left">    init()</TD></TR><TR><TD align="left"><I>Private Functions:</I></TD></TR><TR><TD align="left">    referral_fee(uint256)</TD></TR><TR><TD align="left">    deposit_fee(uint256)</TD></TR><TR><TD align="left">    deposit_fee_dev(uint256)</TD></TR><TR><TD align="left">    deposit_fee_market(uint256)</TD></TR><TR><TD align="left">    withdraw_fee(uint256)</TD></TR><TR><TD align="left">    withdraw_fee_market(uint256)</TD></TR><TR><TD align="left">    withdraw_fee_dev(uint256)</TD></TR><TR><TD align="left">    daily_roi(uint256)</TD></TR><TR><TD align="left"><I>Modifiers:</I></TD></TR><TR><TD align="left">    whenStart()</TD></TR><TR><TD align="left"><I>Public Variables:</I></TD></TR><TR><TD align="left">    BUSD</TD></TR><TR><TD align="left">    isActive</TD></TR><TR><TD align="left">    min</TD></TR><TR><TD align="left">    max</TD></TR><TR><TD align="left">    daily_roi_rate</TD></TR><TR><TD align="left">    withdraw_fee_rate</TD></TR><TR><TD align="left">    withdraw_fee_market_rate</TD></TR><TR><TD align="left">    withdraw_fee_dev_rate</TD></TR><TR><TD align="left">    deposit_fee_market_rate</TD></TR><TR><TD align="left">    deposit_fee_dev_rate</TD></TR><TR><TD align="left">    referral_fee_rate</TD></TR><TR><TD align="left">    contract_addr</TD></TR><TR><TD align="left">    dev1</TD></TR><TR><TD align="left">    dev2</TD></TR><TR><TD align="left">    dev3</TD></TR><TR><TD align="left"><I>Private Variables:</I></TD></TR><TR><TD align="left">    busd<font color="blue" POINT-SIZE="10"> (IERC20)</font></TD></TR><TR><TD align="left">    startTime</TD></TR><TR><TD align="left">    dailyClaim</TD></TR><TR><TD align="left">    weeklyWithdraw</TD></TR><TR><TD align="left">    referral</TD></TR><TR><TD align="left">    deposit</TD></TR></TABLE> >];

SafeMath[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>SafeMath</B></TD></TR><TR><TD align="left"><I>Private Functions:</I></TD></TR><TR><TD align="left">    tryAdd(uint256,uint256)</TD></TR><TR><TD align="left">    trySub(uint256,uint256)</TD></TR><TR><TD align="left">    tryMul(uint256,uint256)</TD></TR><TR><TD align="left">    tryDiv(uint256,uint256)</TD></TR><TR><TD align="left">    tryMod(uint256,uint256)</TD></TR><TR><TD align="left">    add(uint256,uint256)</TD></TR><TR><TD align="left">    sub(uint256,uint256)</TD></TR><TR><TD align="left">    mul(uint256,uint256)</TD></TR><TR><TD align="left">    div(uint256,uint256)</TD></TR><TR><TD align="left">    mod(uint256,uint256)</TD></TR><TR><TD align="left">    sub(uint256,uint256,string)</TD></TR><TR><TD align="left">    div(uint256,uint256,string)</TD></TR><TR><TD align="left">    mod(uint256,uint256,string)</TD></TR></TABLE> >];

}